package projecteuler

// Pentagonals is holding slice of first limit pentagonals and reversed squares map for i..limit
type Pentagonals struct {
	limit       int
	pentagonals []int
	roots       map[int]int
}

// CreatePentagonals calculates and returns slice of pentagonal numbers generated by numbers less than limit
func CreatePentagonals(limit int) (p Pentagonals) {
	p.limit = limit
	p.pentagonals = make([]int, limit)
	p.roots = make(map[int]int)

	for i := 0; i < limit; i++ {
		p.pentagonals[i] = i * (3*i - 1) / 2
		p.roots[i*i] = i
	}

	return
}

// IsPentagonal returns if x is pentagonal
func (p Pentagonals) IsPentagonal(x int) bool {
	squared := 24*x + 1
	if root, ok := p.roots[squared]; ok {
		return root%6 == 5
	}

	return false
}

// Pentagonals returns slice of pentagonals
func (p Pentagonals) Pentagonals() (pentagonals []int) {
	return p.pentagonals
}
